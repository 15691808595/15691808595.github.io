(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{159:function(t,a,s){t.exports=s.p+"assets/img/7e79906dc30dd24bfbad9b7676a9c780.4e8ae0d2.jpg"},240:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"vue核心知识点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue核心知识点"}},[t._v("#")]),t._v(" vue核心知识点")]),t._v(" "),e("h3",{attrs:{id:"对于vue是一套渐进式框架的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对于vue是一套渐进式框架的理解"}},[t._v("#")]),t._v(" 对于Vue是一套渐进式框架的理解")]),t._v(" "),e("p",[e("code",[t._v("Vue")]),t._v("核心功能是一个视图模板引擎，可以通过添加组件系统、客户端路由、大规模状态管理来构建一个完整的框架。可以在核心功能的基础上任意选用其他的部件。这就是“渐进式”，就是Vue的使用方式。")]),t._v(" "),e("h3",{attrs:{id:"vue事件中如何使用event对象？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue事件中如何使用event对象？"}},[t._v("#")]),t._v(" vue事件中如何使用event对象？")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("@click"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v('"'),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("EventName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("params"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"vue中子组件调用父组件的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue中子组件调用父组件的方法"}},[t._v("#")]),t._v(" vue中子组件调用父组件的方法")]),t._v(" "),e("ul",[e("li",[t._v("第一种：this.$parent.xxx;")]),t._v(" "),e("li",[t._v("第二种：通过props传递父组件函数名，子组件接受，接受类型为Function；")]),t._v(" "),e("li",[t._v("第三种：创建eventBus。")])]),t._v(" "),e("h3",{attrs:{id:"vue更新数组时触发视图更新的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue更新数组时触发视图更新的方法"}},[t._v("#")]),t._v(" vue更新数组时触发视图更新的方法")]),t._v(" "),e("p",[e("code",[t._v("Vue.set(object, key, value)")])]),t._v(" "),e("p",[t._v("数组")]),t._v(" "),e("ul",[e("li",[t._v("使用下标更新数组元素；")]),t._v(" "),e("li",[t._v("使用赋值方式改变数组长度；")]),t._v(" "),e("li",[t._v("使用下标增删数组元素；")])]),t._v(" "),e("p",[t._v("对象")]),t._v(" "),e("ul",[e("li",[t._v("对象的增删")])]),t._v(" "),e("h3",{attrs:{id:"vue中对象更改检测的注意事项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue中对象更改检测的注意事项"}},[t._v("#")]),t._v(" vue中对象更改检测的注意事项")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Vue")]),t._v(" 不能检测对象属性的添加或删除；不能动态添加根级别的响应式属性。")]),t._v(" "),e("li",[t._v("使用 "),e("code",[t._v("Vue.set(object, key, value)")]),t._v(" 方法向嵌套对象添加响应式属性。")])]),t._v(" "),e("h3",{attrs:{id:"v-model语法糖的组件中的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-model语法糖的组件中的使用"}},[t._v("#")]),t._v(" v-model语法糖的组件中的使用")]),t._v(" "),e("p",[t._v("使用v-model来进行双向数据绑定的时：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input v"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("model"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"something"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("p",[t._v("复制代码仅仅是一个语法糖：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input v"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("bind"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"something"')]),t._v(" v"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("on"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("input"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"something=$event.target.value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("p",[t._v("复制代码所以在组件中使用的时候，相当于下面的简写：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("custom v"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("bind"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"something"')]),t._v(" v"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("on"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("input"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"something = $event.target.value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("custom"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("p",[t._v("复制代码所以要组件的v-model生效，它必须：")]),t._v(" "),e("p",[t._v("接受一个 "),e("code",[t._v("value")]),t._v(" 属性\n在有新的"),e("code",[t._v("value")]),t._v("时触发"),e("code",[t._v("input")]),t._v("事件")]),t._v(" "),e("p",[t._v("摘自 https://juejin.im/post/5c99eadb5188251c3a2f30af")]),t._v(" "),e("h3",{attrs:{id:"vue-cli开发环境使用全局常量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli开发环境使用全局常量"}},[t._v("#")]),t._v(" vue-cli开发环境使用全局常量")]),t._v(" "),e("ol",[e("li",[t._v("全局变量模块文件，在需要的地方引用进全局变量模块文件")]),t._v(" "),e("li",[t._v("在程序入口的"),e("code",[t._v("main.js")]),t._v("文件里面，将数据挂载到Vue.prototype。")])]),t._v(" "),e("h2",{attrs:{id:"vue弹窗后如何禁止滚动条滚动？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue弹窗后如何禁止滚动条滚动？"}},[t._v("#")]),t._v(" vue弹窗后如何禁止滚动条滚动？")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/***滑动限制***/")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("stop")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("mo")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventDefault")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("overflow"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hidden'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"touchmove"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("mo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//禁止页面滑动")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/***取消滑动限制***/")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("move")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("mo")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventDefault")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("overflow"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//出现滚动条")]),t._v("\n      document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeEventListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"touchmove"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("mo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果不是Vue，可以直接给html设置overflow：hidden")]),t._v("\n")])])]),e("h2",{attrs:{id:"vue-router"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-router"}},[t._v("#")]),t._v(" vue-router")]),t._v(" "),e("h3",{attrs:{id:"vue-router如何响应-路由参数-的变化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-router如何响应-路由参数-的变化"}},[t._v("#")]),t._v(" vue-router如何响应 路由参数 的变化")]),t._v(" "),e("p",[t._v("当使用路由参数时，例如从 "),e("code",[t._v("/user/foo")]),t._v(" 导航到 "),e("code",[t._v("/user/bar")]),t._v("，原来的组件实例会被复用。因为两个路由都渲染同个组件，比起销毁再创建，复用则显得更加高效。同时意味着组件的生命周期钩子不会再被调用。\n复用组件时，想对路由参数的变化作出响应的话，你可以简单地 "),e("code",[t._v("watch")]),t._v(" (监测变化) "),e("code",[t._v("$route")]),t._v(" 对象：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("watch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$route'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对路由变化作出响应...")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"完整的-vue-router-导航解析流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#完整的-vue-router-导航解析流程"}},[t._v("#")]),t._v(" 完整的 vue-router 导航解析流程")]),t._v(" "),e("ul",[e("li",[t._v("导航被触发。")]),t._v(" "),e("li",[t._v("在失活的组件里调用离开守卫。")]),t._v(" "),e("li",[t._v("调用全局的 beforeEach 守卫。")]),t._v(" "),e("li",[t._v("在重用的组件里调用 beforeRouteUpdate 守卫 (2.2+)。")]),t._v(" "),e("li",[t._v("在路由配置里调用 beforeEnter。")]),t._v(" "),e("li",[t._v("解析异步路由组件。")]),t._v(" "),e("li",[t._v("在被激活的组件里调用 beforeRouteEnter。")]),t._v(" "),e("li",[t._v("调用全局的 beforeResolve 守卫 (2.5+)。")]),t._v(" "),e("li",[t._v("导航被确认。")]),t._v(" "),e("li",[t._v("调用全局的 afterEach 钩子。")]),t._v(" "),e("li",[t._v("触发 DOM 更新。")]),t._v(" "),e("li",[t._v("用创建好的实例调用 beforeRouteEnter 守卫中传给 next 的回调函数。")])]),t._v(" "),e("h2",{attrs:{id:"vuex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[t._v("#")]),t._v(" vuex")]),t._v(" "),e("h3",{attrs:{id:"vuex在vue-cli中的应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuex在vue-cli中的应用"}},[t._v("#")]),t._v(" vuex在vue-cli中的应用")]),t._v(" "),e("p",[t._v("单页应用中，组件之间的状态、音乐播放、登录状态、加入购物车")]),t._v(" "),e("h2",{attrs:{id:"http"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" Http")]),t._v(" "),e("h3",{attrs:{id:"axios、fetch与ajax有什么区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#axios、fetch与ajax有什么区别"}},[t._v("#")]),t._v(" axios、fetch与ajax有什么区别")]),t._v(" "),e("p",[t._v("ajax")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("本身是针对"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MVC")]),t._v("的编程"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("不符合现在前端"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MVVM")]),t._v("的浪潮\n基于原生的"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XHR")]),t._v("开发，"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XHR")]),t._v("本身的架构不清晰，已经有了fetch的替代方案\nJQuery整个项目太大，单纯使用ajax却要引入整个JQuery非常的不合理（采取个性化打包的方案又不能享受"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CDN")]),t._v("服务）\n")])])]),e("p",[t._v("axios\n基于"),e("code",[t._v("Promise")]),t._v(" 用于浏览器和 "),e("code",[t._v("nodejs")]),t._v(" 的 "),e("code",[t._v("HTTP")]),t._v(" 客户端，本质上也是对原生"),e("code",[t._v("XHR")]),t._v("的封装，只不过它是"),e("code",[t._v("Promise")]),t._v("的实现版本，符合最新的ES规范，")]),t._v(" "),e("p",[t._v("fetch")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("是AJAX的替代品，是在ES6出现的，使用了ES6中的promise对象。Fetch是基于promise设计的。\n参数有点像jQuery ajax。\nfetch不是ajax的进一步封装，而是原生js，没有使用XMLHttpRequest对象。\n")])])]),e("h2",{attrs:{id:"ui样式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ui样式"}},[t._v("#")]),t._v(" UI样式")]),t._v(" "),e("h3",{attrs:{id:"如何适配移动端"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何适配移动端"}},[t._v("#")]),t._v(" 如何适配移动端")]),t._v(" "),e("p",[e("code",[t._v("使用postcss+vw单位")])]),t._v(" "),e("h3",{attrs:{id:"移动端常用媒体查询的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#移动端常用媒体查询的使用"}},[t._v("#")]),t._v(" 移动端常用媒体查询的使用")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('    移动端1像素边框的问题\n    图片几倍的问题\n    bg-image($url)\n      background-image: url($url + "@2x.png")\n      @media (-webkit-min-device-pixel-ratio: 3), (min-device-pixel-ratio: 3)\n        background-image: url($url + "@3x.png")\n')])])]),e("h2",{attrs:{id:"生产环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生产环境"}},[t._v("#")]),t._v(" 生产环境")]),t._v(" "),e("p",[t._v("vue如何优化首屏加载速度？")]),t._v(" "),e("ol",[e("li",[t._v("使用CDN资源,减小服务器带宽压力")]),t._v(" "),e("li",[t._v("路由懒加载")]),t._v(" "),e("li",[t._v("将一些静态js css放到其他地方（如OSS），减小服务器压力")]),t._v(" "),e("li",[t._v("按需加载三方资源，如iview,建议按需引入iview中的组件")]),t._v(" "),e("li",[t._v("使用nginx开启gzip减小网络传输的流量大小")]),t._v(" "),e("li",[t._v("若首屏为登录页，可以做成多入口，登录页单独分离为一个入口")]),t._v(" "),e("li",[t._v("使用uglifyjs-webpack-plugin插件代替webpack自带UglifyJsPlugin插件")])]),t._v(" "),e("h2",{attrs:{id:"mvvm设计模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvvm设计模式"}},[t._v("#")]),t._v(" MVVM设计模式")]),t._v(" "),e("h3",{attrs:{id:"mvc、mvp与mvvm的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvc、mvp与mvvm的区别"}},[t._v("#")]),t._v(" MVC、MVP与MVVM的区别")]),t._v(" "),e("p",[t._v("mvc")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("MVC全名是**Model View Controller**，模型(model)－视图(view)－控制器(controller)的缩写，一种架构模式；\nview操作会触发controller去改变model，然后model再去改变视图\nmodel：应用程序中处理数据逻辑的一部分，通常用来模型对象对数据库的存存取等操作\nview：视图部分，通常指jsp、html等用来对用户展示的一部分\ncontroller：控制层通常用来处理业务逻辑，负责从试图读取数据，并向模型发送数据\n")])])]),e("p",[t._v("mvvm")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("mvvm 即 **Model-View-ViewModel**，即模型-视图-视图模型；一种设计思想；本质上就是MVC 的改进版。\n主要目的是分离视图（View）和模型（Model）。\n【模型】指的是后端传递的数据。\n【视图】指的是所看到的页面。\n【视图模型】mvvm模式的核心，它是连接view和model的桥梁。\n    一是将【模型】转化成【视图】，即将后端传递的数据转化成所看到的页面。实现的方式是：数据绑定。\n    二是将【视图】转化成【模型】，即将所看到的页面转化成后端的数据。实现的方式是：DOM 事件监听。\n        这两个方向都实现的，我们称之为数据的双向绑定。\n 低耦合、可重用性、独立开发\n")])])]),e("p",[t._v("mvp")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('MVP 模式将 Controller 改名为 Presenter，同时改变了通信方向。\n\n1. 各部分之间的通信，都是双向的。\n\n2. View 与 Model 不发生联系，都通过 Presenter 传递。\n\n3. View 非常薄，不部署任何业务逻辑，称为"被动视图"（Passive View），即没有任何主动性，而 Presenter非常厚，所有逻辑都部署在那里。\n')])])]),e("h2",{attrs:{id:"摘自"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#摘自"}},[t._v("#")]),t._v(" 摘自")]),t._v(" "),e("ul",[e("li",[t._v("https://segmentfault.com/a/1190000016351284")]),t._v(" "),e("li",[t._v("https://segmentfault.com/a/1190000018663104")])]),t._v(" "),e("h2",{attrs:{id:"今日图-终于知道詹姆斯一个人扛起一个队的痛苦了吧"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#今日图-终于知道詹姆斯一个人扛起一个队的痛苦了吧"}},[t._v("#")]),t._v(" 今日图 - 终于知道詹姆斯一个人扛起一个队的痛苦了吧")]),t._v(" "),e("p",[e("img",{attrs:{src:s(159),alt:"7e79906dc30dd24bfbad9b7676a9c780.jpg"}})])])}),[],!1,null,null,null);a.default=n.exports}}]);