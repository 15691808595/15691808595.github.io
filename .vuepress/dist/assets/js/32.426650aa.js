(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{281:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"pre-commit"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pre-commit"}},[t._v("#")]),t._v(" pre-commit")]),t._v(" "),n("p",[n("a",{attrs:{href:"http://browsenpm.org/package/pre-commit",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"http://img.shields.io/npm/v/pre-commit.svg?style=flat-square",alt:"Version npm"}}),n("OutboundLink")],1),n("a",{attrs:{href:"https://travis-ci.org/observing/pre-commit",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"http://img.shields.io/travis/observing/pre-commit/master.svg?style=flat-square",alt:"Build Status"}}),n("OutboundLink")],1),n("a",{attrs:{href:"https://david-dm.org/observing/pre-commit",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://img.shields.io/david/observing/pre-commit.svg?style=flat-square",alt:"Dependencies"}}),n("OutboundLink")],1),n("a",{attrs:{href:"https://coveralls.io/r/observing/pre-commit?branch=master",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"http://img.shields.io/coveralls/observing/pre-commit/master.svg?style=flat-square",alt:"Coverage Status"}}),n("OutboundLink")],1)]),t._v(" "),n("p",[n("strong",[t._v("pre-commit")]),t._v(" is a pre-commit hook installer for "),n("code",[t._v("git")]),t._v(". It will ensure that\nyour "),n("code",[t._v("npm test")]),t._v(" (or other specified scripts) passes before you can commit your\nchanges. This all conveniently configured in your "),n("code",[t._v("package.json")]),t._v(".")]),t._v(" "),n("p",[t._v("But don't worry, you can still force a commit by telling "),n("code",[t._v("git")]),t._v(" to skip the\n"),n("code",[t._v("pre-commit")]),t._v(" hooks by simply committing using "),n("code",[t._v("--no-verify")]),t._v(".")]),t._v(" "),n("h3",{attrs:{id:"installation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),n("p",[t._v("It's advised to install the "),n("strong",[t._v("pre-commit")]),t._v(" module as a "),n("code",[t._v("devDependencies")]),t._v(" in your\n"),n("code",[t._v("package.json")]),t._v(" as you only need this for development purposes. To install the\nmodule simply run:")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("npm install --save-dev pre-commit\n")])])]),n("p",[t._v("To install it as "),n("code",[t._v("devDependency")]),t._v(". When this module is installed it will override\nthe existing "),n("code",[t._v("pre-commit")]),t._v(" file in your "),n("code",[t._v(".git/hooks")]),t._v(" folder. Existing\n"),n("code",[t._v("pre-commit")]),t._v(" hooks will be backed up as "),n("code",[t._v("pre-commit.old")]),t._v(" in the same repository.")]),t._v(" "),n("h3",{attrs:{id:"configuration"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),n("p",[n("code",[t._v("pre-commit")]),t._v(" will try to run your "),n("code",[t._v("npm test")]),t._v(" command in the root of the git\nrepository by default unless it's the default value that is set by the "),n("code",[t._v("npm init")]),t._v(" script.")]),t._v(" "),n("p",[t._v("But "),n("code",[t._v("pre-commit")]),t._v(" is not limited to just running your "),n("code",[t._v("npm test")]),t._v("'s during the\ncommit hook. It's also capable of running every other script that you've\nspecified in your "),n("code",[t._v("package.json")]),t._v(' "scripts" field. So before people commit you\ncould ensure that:')]),t._v(" "),n("ul",[n("li",[t._v("You have 100% coverage")]),t._v(" "),n("li",[t._v("All styling passes.")]),t._v(" "),n("li",[t._v("JSHint passes.")]),t._v(" "),n("li",[t._v("Contribution licenses signed etc.")])]),t._v(" "),n("p",[t._v("The only thing you need to do is add a "),n("code",[t._v("pre-commit")]),t._v(" array to your "),n("code",[t._v("package.json")]),t._v("\nthat specifies which scripts you want to have ran and in which order:")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"437464d0899504fb6b7b"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"version"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"description"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ERROR: No README.md file found!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index.js"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scripts"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo \\"Error: I SHOULD FAIL LOLOLOLOLOL \\" && exit 1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo \\"fooo\\" && exit 0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo \\"bar\\" && exit 0"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pre-commit"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("In the example above, it will first run: "),n("code",[t._v("npm run foo")]),t._v(" then "),n("code",[t._v("npm run bar")]),t._v(" and\nfinally "),n("code",[t._v("npm run test")]),t._v(" which will make the commit fail as it returns the error\ncode "),n("code",[t._v("1")]),t._v(".  If you prefer strings over arrays or "),n("code",[t._v("precommit")]),t._v(" without a middle\ndash, that also works:")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"precommit"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo, bar, test"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pre-commit"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo, bar, test"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pre-commit"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"precommit"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"precommit"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"run"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo, bar, test"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pre-commit"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"run"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"precommit"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"run"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pre-commit"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"run"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo, bar, test"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("The examples above are all the same. In addition to configuring which scripts\nshould be ran you can also configure the following options:")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("silent")]),t._v(" Don't output the prefixed "),n("code",[t._v("pre-commit:")]),t._v(" messages when things fail\nor when we have nothing to run. Should be a boolean.")]),t._v(" "),n("li",[n("strong",[t._v("colors")]),t._v(" Don't output colors when we write messages. Should be a boolean.")]),t._v(" "),n("li",[n("strong",[t._v("template")]),t._v(" Path to a file who's content should be used as template for the\ngit commit body.")])]),t._v(" "),n("p",[t._v("These options can either be added in the "),n("code",[t._v("pre-commit")]),t._v("/"),n("code",[t._v("precommit")]),t._v(" object as keys\nor as "),n("code",[t._v('"pre-commit.{key}')]),t._v(" key properties in the "),n("code",[t._v("package.json")]),t._v(":")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"precommit.silent"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pre-commit"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"silent"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("It's all the same. Different styles so use what matches your project. To learn\nmore about the scripts, please read the official "),n("code",[t._v("npm")]),t._v(" documentation:")]),t._v(" "),n("p",[t._v("https://npmjs.org/doc/scripts.html")]),t._v(" "),n("p",[t._v("And to learn more about git hooks read:")]),t._v(" "),n("p",[t._v("http://githooks.com")]),t._v(" "),n("h3",{attrs:{id:"license"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[t._v("#")]),t._v(" License")]),t._v(" "),n("p",[t._v("MIT")])])}),[],!1,null,null,null);s.default=e.exports}}]);